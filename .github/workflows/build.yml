name: CI

on:
  push:
    branches: [master, 'release/**']
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [master]
    paths-ignore:
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-18.04
        os_name:
          - linux_openresty
          - linux_openresty_1_17
          - linux_openresty_mtls
          - linux_tengine

    runs-on: ${{ matrix.platform }}
    env:
      SERVER_NAME: ${{ matrix.os_name }}
      OPENRESTY_VERSION: default

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive

      - name: Cache deps
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-deps
        with:
          path: deps
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.os_name }}-${{ hashFiles('rockspec/apisix-master-0.rockspec') }}

      - name: Extract branch name
        if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
        id: branch_env
        shell: bash
        run: |
          echo "##[set-output name=version;]$(echo ${GITHUB_REF##*/})"
          echo "##[set-output name=fullname;]$(echo apache-apisix-${GITHUB_REF##*/}-src.tgz)"

      - name: Linux launch common services
        run: |
          project_compose_ci=ci/pod/docker-compose.common.yml make ci-env-up

      - name: Create tarball
        if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
        run: |
          export VERSION=${{ steps.branch_env.outputs.version }}
          make compress-tar

      - name: Remove source code
        if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
        run: |
          rm -rf $(ls -1 --ignore=*.tgz --ignore=ci --ignore=t --ignore=utils --ignore=.github)
          tar zxvf ${{ steps.branch_env.outputs.fullname }}

      - name: Linux Get dependencies
        run: sudo apt install -y cpanminus build-essential libncurses5-dev libreadline-dev libssl-dev perl libpcre3 libpcre3-dev libldap2-dev

      - name: Linux Before install
        run: sudo ./ci/${{ matrix.os_name }}_runner.sh before_install

      - name: Start Dubbo Backend
        if: matrix.os_name == 'linux_openresty'
        run: |
          sudo apt install -y maven
          cd t/lib/dubbo-backend
          mvn package
          cd dubbo-backend-provider/target
          java -Djava.net.preferIPv4Stack=true -jar dubbo-demo-provider.one-jar.jar > /tmp/java.log &

      - name: Linux Install
        run: |
            sudo --preserve-env=OPENRESTY_VERSION \
            ./ci/${{ matrix.os_name }}_runner.sh do_install

      - name: Linux Script
        run: sudo ./ci/${{ matrix.os_name }}_runner.sh script

      - name: Publish Artifact
        if: ${{ startsWith(github.ref, 'refs/heads/release/') && matrix.os_name == 'linux_openresty' }}
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ steps.branch_env.outputs.fullname }}
          path: ${{ steps.branch_env.outputs.fullname }}
